// <auto-generated />
using System;
using Menhera.Database;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Menhera.Migrations
{
    [DbContext(typeof(MenherachanContext))]
    partial class MenherachanContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.13")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("Menhera.Models.Admin", b =>
                {
                    b.Property<int>("AdminId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("admin_id")
                        .HasColumnType("int");

                    b.Property<bool>("IsSuperadmin")
                        .HasColumnName("is_superadmin")
                        .HasColumnType("tinyint(1)");

                    b.Property<int>("UserId")
                        .HasColumnName("user_id")
                        .HasColumnType("int");

                    b.HasKey("AdminId");

                    b.ToTable("admin");
                });

            modelBuilder.Entity("Menhera.Models.Ban", b =>
                {
                    b.Property<int>("BanId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ban_id")
                        .HasColumnType("int");

                    b.Property<int>("AdminId")
                        .HasColumnName("admin_id")
                        .HasColumnType("int");

                    b.Property<string>("AnonIpHash")
                        .HasColumnName("anon_ip_hash")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<int>("BoardId")
                        .HasColumnName("board_id")
                        .HasColumnType("int");

                    b.Property<string>("Reason")
                        .HasColumnName("reason")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<DateTime>("Time")
                        .HasColumnName("time")
                        .HasColumnType("datetime(6)");

                    b.HasKey("BanId");

                    b.ToTable("ban");
                });

            modelBuilder.Entity("Menhera.Models.Board", b =>
                {
                    b.Property<int>("BoardId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("board_id")
                        .HasColumnType("int");

                    b.Property<bool>("AnonHasNoName")
                        .HasColumnName("anon_has_no_name")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("AnonName")
                        .HasColumnName("anon_name")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("Description")
                        .HasColumnName("description")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<int>("FileLimit")
                        .HasColumnName("file_limit")
                        .HasColumnType("int");

                    b.Property<bool>("FilesAreAllowed")
                        .HasColumnName("files_are_allowed")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("HasSubject")
                        .HasColumnName("has_subject")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("IsHidden")
                        .HasColumnName("is_hidden")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Postfix")
                        .HasColumnName("postfix")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("Prefix")
                        .HasColumnName("prefix")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("Title")
                        .HasColumnName("title")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.HasKey("BoardId");

                    b.ToTable("board");
                });

            modelBuilder.Entity("Menhera.Models.File", b =>
                {
                    b.Property<int>("FileId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("file_id")
                        .HasColumnType("int");

                    b.Property<int>("BoardId")
                        .HasColumnName("board_id")
                        .HasColumnType("int");

                    b.Property<string>("FileName")
                        .HasColumnName("file_name")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("Info")
                        .HasColumnName("info")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<int>("PostId")
                        .HasColumnName("post_id")
                        .HasColumnType("int");

                    b.Property<int>("ThreadId")
                        .HasColumnName("thread_id")
                        .HasColumnType("int");

                    b.Property<string>("ThumbnailName")
                        .HasColumnName("thumbnail_name")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.HasKey("FileId");

                    b.ToTable("file");
                });

            modelBuilder.Entity("Menhera.Models.Post", b =>
                {
                    b.Property<int>("PostId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("post_id")
                        .HasColumnType("int");

                    b.Property<string>("AnonIpHash")
                        .HasColumnName("anon_ip_hash")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("AnonName")
                        .HasColumnName("anon_name")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<int>("BoardId")
                        .HasColumnName("board_id")
                        .HasColumnType("int");

                    b.Property<int>("BumpInUnixTime")
                        .HasColumnName("bump_in_unix_time")
                        .HasColumnType("int");

                    b.Property<string>("Comment")
                        .HasColumnName("comment")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("Email")
                        .HasColumnName("email")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<bool>("IsPinned")
                        .HasColumnName("is_pinned")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Subject")
                        .HasColumnName("subject")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<int>("ThreadId")
                        .HasColumnName("thread_id")
                        .HasColumnType("int");

                    b.Property<DateTime>("Time")
                        .HasColumnName("time")
                        .HasColumnType("datetime(6)");

                    b.HasKey("PostId");

                    b.ToTable("post");
                });

            modelBuilder.Entity("Menhera.Models.Report", b =>
                {
                    b.Property<int>("ReportId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("report_id")
                        .HasColumnType("int");

                    b.Property<int>("BoardId")
                        .HasColumnName("board_id")
                        .HasColumnType("int");

                    b.Property<int>("PostId")
                        .HasColumnName("post_id")
                        .HasColumnType("int");

                    b.Property<string>("Reason")
                        .HasColumnName("reason")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<int>("ThreadId")
                        .HasColumnName("thread_id")
                        .HasColumnType("int");

                    b.Property<DateTime>("Time")
                        .HasColumnName("time")
                        .HasColumnType("datetime(6)");

                    b.HasKey("ReportId");

                    b.ToTable("report");
                });

            modelBuilder.Entity("Menhera.Models.Thread", b =>
                {
                    b.Property<int>("ThreadId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("thread_id")
                        .HasColumnType("int");

                    b.Property<bool>("AnonHasNoName")
                        .HasColumnName("anon_has_no_name")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("AnonName")
                        .HasColumnName("anon_name")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<int>("BoardId")
                        .HasColumnName("board_id")
                        .HasColumnType("int");

                    b.Property<string>("IsClosed")
                        .HasColumnName("is_closed")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<bool>("IsHidden")
                        .HasColumnName("is_hidden")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Op")
                        .HasColumnName("op")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.HasKey("ThreadId");

                    b.ToTable("thread");
                });

            modelBuilder.Entity("Menhera.Models.User", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("user_id")
                        .HasColumnType("int");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("Email")
                        .HasColumnName("email")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Id")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<bool>("IsAdmin")
                        .HasColumnName("is_admin")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Login")
                        .HasColumnName("login")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("NormalizedEmail")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("NormalizedUserName")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("PasswordHash")
                        .HasColumnName("password_hash")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("UserName")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.HasKey("UserId");

                    b.ToTable("user");
                });
#pragma warning restore 612, 618
        }
    }
}
